# Generated by Django 4.2.3 on 2023-07-28 10:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('url', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('subtitle', models.CharField(max_length=100, verbose_name='Подзаголовок')),
                ('release_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата выпуска')),
                ('poster', models.ImageField(upload_to='article/posters/', verbose_name='Постер')),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
            },
        ),
        migrations.CreateModel(
            name='ArticleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('url', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('photo', models.ImageField(upload_to='article/types/', verbose_name='Фото типа статьи')),
            ],
            options={
                'verbose_name': 'Тип статьи',
                'verbose_name_plural': 'Типы статей',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('original_title', models.CharField(max_length=255, verbose_name='Оригинальное название')),
                ('url', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('poster', models.ImageField(upload_to='movie/posters/', verbose_name='Постер')),
                ('year', models.IntegerField(verbose_name='Год')),
                ('director', models.CharField(max_length=255, verbose_name='Режиссёр')),
                ('genre', models.CharField(max_length=50, verbose_name='Жанр')),
                ('music', models.FileField(null=True, upload_to='movie/music/', verbose_name='Музыка')),
                ('link', models.CharField(max_length=500, null=True, verbose_name='Ссылка на трейлер')),
            ],
            options={
                'verbose_name': 'Фильм',
                'verbose_name_plural': 'Фильмы',
            },
        ),
        migrations.CreateModel(
            name='ProjectPresentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('synopsys', models.TextField()),
                ('presentation_file', models.FileField(null=True, upload_to='project/presentation/', verbose_name='Презентация проекта')),
                ('poster', models.ImageField(upload_to='scenario/posters/', verbose_name='Постер')),
            ],
            options={
                'verbose_name': 'Презентация проекта',
                'verbose_name_plural': 'Презентации проектов',
            },
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('synopsys', models.TextField(verbose_name='Синопсис')),
                ('text', models.FileField(upload_to='scenario/texts/', verbose_name='Текст')),
                ('poster', models.ImageField(upload_to='scenario/posters/', verbose_name='Постер')),
            ],
            options={
                'verbose_name': 'Сценарий',
                'verbose_name_plural': 'Сценарии',
            },
        ),
        migrations.CreateModel(
            name='ST88rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.SmallIntegerField(verbose_name='Рейтинг по версии ST88')),
                ('author', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ST88ratings', to='API.movie', verbose_name='Фильм')),
            ],
            options={
                'verbose_name': 'СТ88 Рейтинг',
                'verbose_name_plural': 'СТ88 Рейтинги',
            },
        ),
        migrations.CreateModel(
            name='ST88project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('year', models.IntegerField(verbose_name='Год')),
                ('synopsys', models.TextField(verbose_name='')),
                ('downloaded_film', models.FileField(null=True, upload_to='ST88/projects/', verbose_name='Загруженный фильм')),
                ('linked_film', models.CharField(max_length=500, verbose_name='Ссылка на фильм')),
                ('poster', models.ImageField(upload_to='scenario/posters/', verbose_name='Постер')),
                ('scenario', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ST88_project', to='API.scenario', verbose_name='Сценарий')),
            ],
            options={
                'verbose_name': 'СТ88 Проект',
                'verbose_name_plural': 'СТ88 Проекты',
            },
        ),
        migrations.CreateModel(
            name='ST88description',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание по версии ST88')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ST88descriptions', to='API.movie', verbose_name='Фильм')),
            ],
            options={
                'verbose_name': 'СТ88 описание',
                'verbose_name_plural': 'СТ88 описания',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('nickname', models.CharField(max_length=255, null=True, verbose_name='Имя')),
                ('text', models.TextField(verbose_name='Комментарий')),
                ('ST88_project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='API.st88project', verbose_name='СТ88 Проект')),
                ('article', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='API.article', verbose_name='Статья')),
                ('movie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='API.movie', verbose_name='Фильм')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='API.review', verbose_name='Родительский комментарий')),
                ('project_presentation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='API.projectpresentation', verbose_name='Презентация проекта')),
                ('scenario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='API.scenario', verbose_name='Сценарий')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
            },
        ),
        migrations.CreateModel(
            name='Frame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название кадра')),
                ('image', models.ImageField(upload_to='movie/frames/', verbose_name='Кадр')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frames', to='API.movie', verbose_name='Фильм')),
            ],
            options={
                'verbose_name': 'Кадр',
                'verbose_name_plural': 'Кадры',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='article_type',
            field=models.ManyToManyField(related_name='articles', to='API.articletype', verbose_name='Тип статьи'),
        ),
    ]
